name: Pull Request

on:
  pull_request:
  push:
    branches: [master]

jobs:
  lint:
    name: Format & Clippy
    runs-on: ubuntu-latest
    steps:
      - uses: ./.github/actions/setup-rust
        with:
          rust-toolchain: nightly
          rust-components: rustfmt, clippy

      - name: Run fmt
        uses: actions-rs/cargo@v1
        with:
          command: fmt
          args: --all -- --check

      - name: Run clippy
        uses: actions-rs/cargo@v1
        with:
          command: clippy
          args: --all-targets -- -D warnings

      - name: Run clippy - yew with all features
        run: |
          cd yew
          cargo clippy --all-targets --features "cbor msgpack toml yaml" -- -D warnings

      - name: Run clippy - yew-stdweb with all features
        run: |
          cd yew-stdweb
          cargo clippy --all-targets --features "cbor msgpack toml yaml" -- -D warnings

  check_examples:
    name: Check Examples
    runs-on: ubuntu-latest
    steps:
      - uses: ./.github/actions/setup-rust
        with:
          rust-toolchain: stable

      - name: Run check
        run: |
          cd examples
          cargo check --all-targets

  doc_tests:
    name: Documentation Tests
    runs-on: ubuntu-latest
    steps:
      - uses: ./.github/actions/setup-rust
        with:
          rust-toolchain: stable
          rust-target: wasm32-unknown-unknown

      - name: Run doctest
        uses: actions-rs/cargo@v1
        with:
          command: test
          args: --workspace --doc --target wasm32-unknown-unknown

      - name: Run doctest - yew with features
        run: |
          cd yew
          cargo test --doc --target wasm32-unknown-unknown --features "doc_test wasm_test yaml msgpack cbor toml"

  integration_tests:
    name: Integration Tests for ${{ matrix.package }} on ${{ matrix.toolchain }}
    runs-on: ubuntu-latest
    services:
      httpbin:
        image: kennethreitz/httpbin@sha256:599fe5e5073102dbb0ee3dbb65f049dab44fa9fc251f6835c9990f8fb196a72b
        ports:
          - 8080:80

    strategy:
      matrix:
        toolchain:
          - 1.45.0 # MSRV
          - stable

    steps:
      - uses: ./.github/actions/setup-rust
        with:
          rust-toolchain: ${{ matrix.toolchain }}
          rust-target: wasm32-unknown-unknown

      - name: Install wasm-pack
        run: curl https://rustwasm.github.io/wasm-pack/installer/init.sh -sSf | sh

      # FIXME: Only needed because of <https://github.com/rustwasm/wasm-bindgen/issues/2261>
      - name: Install geckodriver
        run: |
          cd ~
          mkdir geckodriver
          curl --retry 5 -LO https://github.com/mozilla/geckodriver/releases/download/v0.26.0/geckodriver-v0.26.0-linux64.tar.gz
          tar -xzf geckodriver-*-linux64.tar.gz -C geckodriver
          echo "::add-path::$HOME/geckodriver"

      - name: Run tests - yew
        env:
          HTTPBIN_URL: "http://localhost:8080"
        run: |
          cd yew
          wasm-pack test --chrome --firefox --headless -- --features "wasm_test httpbin_test"

      - name: Run tests - yew-stdweb
        env:
          HTTPBIN_URL: "http://localhost:8080"
        run: |
          cd yew-stdweb
          wasm-pack test --firefox --headless -- --features "wasm_test httpbin_test"

      - name: Run tests - yew-functional
        run: |
          cd yew-functional
          wasm-pack test --chrome --firefox --headless

  unit_tests:
    name: Unit Tests on ${{ matrix.toolchain }}
    runs-on: ubuntu-latest
    strategy:
      matrix:
        toolchain:
          - 1.45.0 # MSRV
          - stable
          - nightly

    steps:
      - uses: ./.github/actions/setup-rust
        with:
          rust-toolchain: ${{ matrix.toolchain }}

      - name: Run tests
        run: |
          packages=("yew-components" "yew-functional" "yew-macro" "yew-router" "yew-router-macro" "yew-router-route-parser" "yewtil")
          for package in "${packages[@]}"; do
            (cd "$package" && cargo test)
          done
