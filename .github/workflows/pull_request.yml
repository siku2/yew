name: Pull Request

# TODO push is just for testing
on: [pull_request, push]

jobs:
  lint:
    name: Format & Clippy
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions-rs/toolchain@v1
        with:
          toolchain: nightly
          override: true
          profile: minimal
          components: rustfmt, clippy

      - name: Run fmt
        uses: actions-rs/cargo@v1
        with:
          command: fmt
          args: --all -- --check

      - name: Run clippy
        uses: actions-rs/cargo@v1
        with:
          command: clippy
          args: --workspace --examples --tests -- -D warnings

      - name: Run clippy - yew with all features
        run: |
          cd yew
          cargo clippy --tests --features "cbor msgpack toml yaml" -- -D warnings

      - name: Run clippy - yew-stdweb with all features
        run: |
          cd yew-stdweb
          cargo clippy --tests --features "cbor msgpack toml yaml" -- -D warnings

  # TODO build all examples

  doc_tests:
    name: Documentation Tests
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          target: wasm32-unknown-unknown
          override: true
          profile: minimal

      - name: Run doctest
        uses: actions-rs/cargo@v1
        with:
          command: test
          args: --doc --workspace --target wasm32-unknown-unknown

      - name: Run doctest - yew with features
        run: |
          cd yew
          cargo test --doc --target wasm32-unknown-unknown --features "doc_test wasm_test yaml msgpack cbor toml"

  integration_tests:
    name: Test ${{ matrix.package }} with ${{ matrix.browser_flag }} on ${{ matrix.toolchain }}
    runs-on: ubuntu-latest
    services:
      httpbin:
        image: kennethreitz/httpbin@sha256:599fe5e5073102dbb0ee3dbb65f049dab44fa9fc251f6835c9990f8fb196a72b
        ports:
          - 8080:80

    strategy:
      matrix:
        toolchain:
          - 1.45.0 # MSRV
          - stable
          - nightly

        browser_flag:
          # - firefox
          - chrome

    steps:
      - uses: actions/checkout@v2
      - uses: actions-rs/toolchain@v1
        with:
          toolchain: ${{ matrix.toolchain }}
          target: wasm32-unknown-unknown
          override: true
          profile: minimal

      - uses: actions-rs/install@v0.1
        with:
          crate: wasm-pack
          version: latest
          use-tool-cache: true

      - name: Run tests - yew
        env:
          HTTPBIN_URL: "http://localhost:8000"
        run: |
          cd yew
          wasm-pack test --${{ matrix.browser_flag }} --headless -- --features "wasm_test httpbin_test"

      - name: Run tests - yew-stdweb
        env:
          HTTPBIN_URL: "http://localhost:8000"
        run: |
          cd yew-stdweb
          wasm-pack test --${{ matrix.browser_flag }} --headless -- --features "wasm_test httpbin_test"

      - name: Run tests - yew-functional
        run: |
          cd yew-functional
          wasm-pack test --${{ matrix.browser_flag }} --headless

  unit_tests:
    name: Unit Tests
    runs-on: ubuntu-latest
    strategy:
      matrix:
        toolchain:
          - 1.45.0 # MSRV
          - stable
          - nightly

    steps:
      - uses: actions/checkout@v2
      - uses: actions-rs/toolchain@v1
        with:
          toolchain: ${{ matrix.toolchain }}
          target: wasm32-unknown-unknown
          override: true
          profile: minimal

      - name: Run tests
        uses: actions-rs/cargo@v1
        with:
          command: test
          args: --workspace --target wasm32-unknown-unknown
